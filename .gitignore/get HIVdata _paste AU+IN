replace <- function(line, oldchar, newchar) {
  reg <- "\\[(\\s|\\S)*?\\]"
  pos <- str_locate_all(line,reg)
  lines <- str_sub(line, start = pos[[1]][, "start"], end = pos[[1]][, "end"])
  
  for (i in seq_along(lines)) {
    
    pos.new <- str_locate_all(lines[i], oldchar)
    
    pos.new <- pos.new[[1]] + pos[[1]][i, "start"] - 1
    
    for (i in seq_along(pos.new[, "start"])) {
      str_sub(line, start = pos.new[i, "start"], end = pos.new[i, "end"]) <- newchar
    }
    ##
  }
  return(line) ##
}

splitc1 <- function(line,splitchar) {
  #不为空或者包括;
    if (length(line)!=0) {
    if(str_detect(line,splitchar)>0){
      terms <- strsplit(line,splitchar)
      ##
      terms <- terms[[1]]
    } else {
      terms <- line  ##
    }
  } 
  return(terms)
}
test5<-splitc1(datat[1,1],splitchar='; ')
test4<-splitc1(test3[2],splitchar = ',')
paste(test4[1],',',test4[length(test4)],sep = "")
test22 <- str_sub(test2[1], start = (str_locate_all(test2[1],"\\[(\\s|\\S)*?\\]")[[1]][, "start"])+1, end = (str_locate_all(test2[1],"\\[(\\s|\\S)*?\\]")[[1]][, "end"])-1)
test22

pasteai<- function(line1){
  if (length(line1)!=0) {
  line2<-splitc1(line1,splitchar = '; ')
  for (i in seq_along(line2)) {
    ain<-str_locate(line2[i],"]")
    bin<-str_length(line2[i])
    cin<-as.numeric(ain[1,1])
    linein<-str_sub(line2[i], cin+2, bin)
  #zheli tiqu jigou dizhi,"in" daibiaozuozhe,ranhou yao jiezhe tiqu zuozhe,ba zuozhe
    #he jigou paste
    #可以共用ain
    aau<-str_locate(line2[i],"\\[")
    bau<-as.numeric(aau[1,1])
    lineaus<-str_sub(line2[i],bau+1,cin-1)
    lineau<-splitc1(lineaus,splitchar = "# ")
    for(j in seq_along(lineau)){
     lineauin<-paste (lineau[j],';',linein)
     }
  }

    return(lineauin)}
  }

pasteai1<-function(line1){
  if (length(line1)!=0){
    line2<-splitc1(line1,splitchar = '; ')
    for (i in seq_along(line2)){
      ain<-str_locate(line2[i],"]")
      bin<-str_length(line2[i])
      cin<-as.numeric(ain[1,1])
      linein<-str_sub(line2[i], cin+2, bin) 
    }
   }
  return(linein)
}
#pasteai和pasteai1始终只能返回最后一个值#
-----------------------------------------------
#20180423#
\d{4}(?=[\d\D]{3}$)
 #这个正则表达式能提取字符串倒数第4位到第7位的数字值#
wos.string.replace <- function(line, oldchar, newchar) {
  reg <- "\\[(\\s|\\S)*?\\]"
  pos <- str_locate_all(line,reg)
  lines <- str_sub(line, start = pos[[1]][, "start"], end = pos[[1]][, "end"])
  
  for (i in seq_along(lines)) {
    
    pos.new <- str_locate_all(lines[i], oldchar)
    
    pos.new <- pos.new[[1]] + pos[[1]][i, "start"] - 1
    
    for (i in seq_along(pos.new[, "start"])) {
      str_sub(line, start = pos.new[i, "start"], end = pos.new[i, "end"]) <- newchar
    }
    ##
  }
  return(line) ##
}

#以上替换[]中的；#

wos.item.addresses <- function(line) {
  #不为空或者包括;
  splitchar<-";"
  if (length(line)!=0) {
    if(str_detect(line,splitchar)>0){
      terms <- strsplit(line,splitchar)
      ##
      terms <- terms[[1]]
    } else {
      terms <- line  ##
    }
  } 
  return(terms)
}
#以上按 ";"进行分割

wos.item.countries <- function(terms) {
  locatechar <- "]"
  if (length(terms)!=0){
    countries<-c() ##
    for(term in terms) {
      pos <-str_locate_all(term,locatechar)
      pos <- as.numeric(pos[[1]])
      extractions<-str_sub(term,pos+1)
      extractions<-str_trim(extractions[1])
      countries<-c(countries,extractions) ##
    }
  }
  return(countries)
}
#以上提取地址

wos.items.USA <- function(results) {
  
  countries <- results[ ,"country"]
  
  pos <- str_detect( countries, "USA") 
  pos2 <- str_detect( countries, "[0-9]") 
  
  countries[pos | pos2] <- "USA"
  
  return(countries)
}

#以上modify USA
